% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/textConversationAnalysis.R
\name{textConversationAnalysis}
\alias{textConversationAnalysis}
\title{Analyze conversation attributes}
\usage{
textConversationAnalysis(
  inputData,
  inputType,
  meetingId,
  speakerId,
  sentMethod = "none"
)
}
\arguments{
\item{inputData}{data.frame that is the output of either processZoomChat or processZoomTranscript}

\item{inputType}{string of either 'transcript' or 'chat'}

\item{meetingId}{string giving the name of the variable with the meetingId}

\item{speakerId}{string giving the name of the identifier for the individual who made this contribution}

\item{sentMethod}{string giving the type of sentiment analysis to include, either 'aws' or 'syuzhet'}
}
\value{
A list of two data.frames, with names conditional on your choice to analyze
a parsed transcript file or a parsed chat file. The first list item contains
statistics at the corpus level. The second list item contains statistics
at the speaker/messager level of analysis.
}
\description{
This function takes in the output of one of the other functions (either processZoomChat or processZoomTranscript)
and produces a set of conversation measures.
}
\examples{
convo.out = textConversationAnalysis(inputData=sample_transcript_processed, 
inputType='transcript', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="none")

convo.out = textConversationAnalysis(inputData=sample_transcript_sentiment_syu, 
inputType='transcript', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="syuzhet")

convo.out = textConversationAnalysis(inputData=sample_chat_sentiment_aws, 
inputType='chat', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="aws")

\dontrun{
convo.out = textConversationAnalysis(inputData=sample_transcript_sentiment_aws, 
inputType='transcript', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="aws")

convo.out = textConversationAnalysis(inputData=sample_transcript_sentiment_syu, 
inputType='transcript', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="syuzhet")

convo.out = textConversationAnalysis(inputData=sample_chat_processed, 
inputType='chat', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="none")

convo.out = textConversationAnalysis(inputData=sample_chat_sentiment_aws, 
inputType='chat', meetingId='batchMeetingId', 
speakerId='userName', sentMethod="aws")

convo.out = textConversationAnalysis(inputData=sample_chat_sentiment_syu, 
inputType='chat',meetingId='batchMeetingId',  
speakerId='userName', sentMethod="syuzhet")
}
}
