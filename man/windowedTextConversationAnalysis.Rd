% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/windowedTextConversationAnalysis.R
\name{windowedTextConversationAnalysis}
\alias{windowedTextConversationAnalysis}
\title{Run a windowed analysis on either a Zoom transcript or chat
This function conducts a temporal window analysis on the conversation in
either a Zoom transcript or chat. It replicates the textConversationAnalysis
function across a set of windows at a window size specified by the user.}
\usage{
windowedTextConversationAnalysis(
  inputData,
  inputType,
  speakerId,
  doSentiment = FALSE,
  sentiDone = FALSE,
  timeVar,
  windowSize
)
}
\arguments{
\item{inputData}{data.frame output of either processZoomTranscript or processZoomChat}

\item{inputType}{string of either 'chat' or 'transcript'}

\item{speakerId}{string giving the variable name of the user identity}

\item{doSentiment}{boolean indicating whether you want the sentiment analysis}

\item{sentiDone}{boolean indicating whether inputData already has the sentiment done}

\item{timeVar}{name of variable giving the time marker to be used.
For transcript, either use 'utteranceStartSeconds' or 'utteranceEndSeconds';
for chat use 'messageTime'}

\item{windowSize}{integer value of the duration of the window in number of seconds}
}
\value{
list with two data.frames. In the first, each row is a temporal window.
In the second, each row is a user at a given temporal window.
}
\description{
Run a windowed analysis on either a Zoom transcript or chat
This function conducts a temporal window analysis on the conversation in
either a Zoom transcript or chat. It replicates the textConversationAnalysis
function across a set of windows at a window size specified by the user.
}
\examples{
win.text.out = windowedTextConversationAnalysis(inputData=sample_transcript_processed, 
inputType="transcript", speakerId="userName", doSentiment=FALSE, 
sentiDone=FALSE, timeVar="utteranceStartSeconds", windowSize=300)
}
