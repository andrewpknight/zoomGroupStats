% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/flattenSelf.R
\name{flattenSelf}
\alias{flattenSelf}
\title{Combine transcript or chat files into conversational turns}
\usage{
flattenSelf(inputData, inputType, meetingId, speakerId, gapLength)
}
\arguments{
\item{inputData}{data.frame output from either processZoomTranscript or processZoomChat}

\item{inputType}{either 'transcript' or 'chat'}

\item{meetingId}{character giving the name of the meeting identifier variable}

\item{speakerId}{character giving the name of the speaker identifier variable}

\item{gapLength}{integer giving the number of seconds for marking distinct turns by the same speaker. Consecutive utterances by the same speaker of greater than or equal to this value will be treated as different conversational turns.}
}
\value{
a data.frame that is the same format as inputData, but where the observations are the new, compressed conversational turns.
}
\description{
Different transcription algorithms mark utterances in different ways. This function
will combine consecutive utterances (or messages) by the same person into conversational
turns. The user can also specify a gap in between messages to use to determine
whether they should be combined or not.
}
\examples{
newChat = flattenSelf(inputData = 
sample_chat_processed[sample_chat_processed$batchMeetingId=="00000000001", ], 
inputType="chat", meetingId = "batchMeetingId", 
speakerId="userName", gapLength=120)

newTranscript = flattenSelf(inputData = 
sample_transcript_processed[sample_transcript_processed$batchMeetingId=="00000000001", ], 
inputType="transcript", meetingId = "batchMeetingId", 
speakerId="userName", gapLength=120)

}
